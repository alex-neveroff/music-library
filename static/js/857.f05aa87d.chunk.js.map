{"version":3,"file":"static/js/857.f05aa87d.chunk.js","mappings":"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","sources":["components/LastReleases/LastReleases.jsx","components/NearestReleases/NearestReleases.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import React from 'react';\n\nconst LastReleases = () => {\n  return (\n    <section>\n      <h2>Last Releases of Power Metal</h2>\n      <ul></ul>\n    </section>\n  );\n};\n\nexport default LastReleases;\n","import { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { getNearestRealeases } from 'services/api';\n\nconst NearestReleases = () => {\n  const [releases, setReleases] = useState([]);\n  console.log('releases', releases);\n\n  useEffect(() => {\n    const getRealeases = async () => {\n      try {\n        const releasesInfo = await getNearestRealeases();\n        setReleases(releasesInfo['release-groups']);\n      } catch (error) {\n        Notify.failure(error.message);\n      }\n    };\n    getRealeases();\n  }, []);\n\n  return (\n    <section>\n      <h2>Nearest Releases of power metal</h2>\n      <ul>\n        {releases\n          .filter(release => release['first-release-date'].includes('-'))\n          .map(release => {\n            const genres = release.tags\n              .filter(tag => tag.name !== 'metal' && tag.name !== 'rock')\n              .map(tag => tag.name);\n            return (\n              <li key={release.id}>\n                <p>{release['first-release-date']}</p>\n                <p>{release.title}</p>\n                <p>{release['artist-credit'][0]['name']}</p>\n                <p>{genres.join(', ')}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </section>\n  );\n};\n\nexport default NearestReleases;\n","import LastReleases from 'components/LastReleases/LastReleases';\nimport NearestReleases from 'components/NearestReleases/NearestReleases';\nimport React from 'react';\n\nconst Home = () => {\n  return (\n    <div>\n      <NearestReleases />\n      <LastReleases />\n    </div>\n  );\n};\n\nexport default Home;\n","import { Notify } from 'notiflix';\nimport axios from 'axios';\n\nexport const getArtistName = async query => {\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/artist/?query=artist:${query}%20AND%20tag:metal&fmt=json`\n    );\n    console.log(data);\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const getArtistDetails = async artistId => {\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/artist/${artistId}?inc=genres+release-groups&fmt=json`\n    );\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const getNearestRealeases = async () => {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = date.getMonth().toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  const today = `${year}-${month}-${day}`;\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/release-group/?query=tag:(\"power metal\"+OR+\"heavy metal\")%20AND%20primarytype:album%20AND%20firstreleasedate:[${today} TO *]&fmt=json`\n    );\n    console.log(data);\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n"],"names":["_jsxs","children","_jsx","_useState","useState","_useState2","_slicedToArray","releases","setReleases","console","log","useEffect","getRealeases","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","releasesInfo","wrap","_context","prev","next","getNearestRealeases","sent","t0","Notify","message","stop","apply","arguments","filter","release","includes","map","genres","tags","tag","name","title","join","id","NearestReleases","LastReleases","getArtistName","query","_yield$axios$get","data","axios","concat","abrupt","_x","getArtistDetails","_ref2","_callee2","artistId","_yield$axios$get2","_context2","_x2","_ref3","_callee3","date","year","month","day","today","_yield$axios$get3","_context3","Date","getFullYear","getMonth","toString","padStart","getDate"],"sourceRoot":""}