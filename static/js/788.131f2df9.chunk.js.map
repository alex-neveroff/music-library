{"version":3,"file":"static/js/788.131f2df9.chunk.js","mappings":"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","sources":["components/LastReleases/LastReleases.jsx","components/NearestReleases/NearestReleases.styled.js","components/NearestReleases/NearestReleases.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import React from 'react';\n\nconst LastReleases = () => {\n  return (\n    <section>\n      <h2>Last Releases of Power Metal</h2>\n      <ul></ul>\n    </section>\n  );\n};\n\nexport default LastReleases;\n","import styled from '@emotion/styled';\n\nexport const NearestAlbums = styled.section`\n  .pageTitle {\n    text-transform: uppercase;\n    text-align: center;\n  }\n  .homeList {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 16px;\n    margin-bottom: 40px;\n  }\n  .homeList-item {\n    cursor: pointer;\n    border-radius: 5px;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    width: calc((100% - 64px) / 5);\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n    overflow: hidden;\n    background-color: #fff;\n\n    &:active {\n      transform: scale(0.97);\n      box-shadow: 15px 15px 15px rgba(0, 0, 0, 0.16),\n        15px 15px 15px rgba(0, 0, 0, 0.16), 15px -15px 15px rgba(0, 0, 0, 0.16),\n        -15px 15px 15px rgba(0, 0, 0, 0.16);\n    }\n\n    &:hover {\n      &:hover {\n        transform: scale(1.03);\n      }\n    }\n  }\n\n  .album-title {\n    text-transform: uppercase;\n    margin-bottom: 7px;\n    font-size: 16px;\n    line-height: 1.16;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding-left: 5px;\n  }\n  .album-data {\n    margin-bottom: 7px;\n    font-size: 16px;\n    line-height: 1.16;\n    padding-left: 5px;\n  }\n`;\n","import { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { getNearestRealeases } from 'services/api';\nimport { NearestAlbums } from './NearestReleases.styled';\n\nconst NearestReleases = () => {\n  const [releases, setReleases] = useState([]);\n  console.log('releases', releases);\n\n  useEffect(() => {\n    const getRealeases = async () => {\n      try {\n        const releasesInfo = await getNearestRealeases();\n        setReleases(releasesInfo['release-groups']);\n      } catch (error) {\n        Notify.failure(error.message);\n      }\n    };\n    getRealeases();\n  }, []);\n\n  return (\n    <NearestAlbums>\n      <h2 className=\"pageTitle\">Nearest Releases of power metal</h2>\n      <ul className=\"homeList\">\n        {releases\n          .filter(release => release['first-release-date'].includes('-'))\n          .map(release => {\n            const genres = release.tags\n              .filter(tag => tag.name !== 'metal' && tag.name !== 'rock')\n              .map(tag => tag.name);\n            return (\n              <li className=\"homeList-item\" key={release.id}>\n                <h3 className=\"album-title\">{release.title}</h3>\n                <p className=\"album-data\">{release['first-release-date']}</p>\n                <p className=\"album-data\">\n                  {release['artist-credit'][0]['name']}\n                </p>\n                <p className=\"album-data\">{genres.join(', ')}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </NearestAlbums>\n  );\n};\n\nexport default NearestReleases;\n","import LastReleases from 'components/LastReleases/LastReleases';\nimport NearestReleases from 'components/NearestReleases/NearestReleases';\nimport React from 'react';\n\nconst Home = () => {\n  return (\n    <div>\n      <NearestReleases />\n      <LastReleases />\n    </div>\n  );\n};\n\nexport default Home;\n","import { Notify } from 'notiflix';\nimport axios from 'axios';\n\nexport const getArtistName = async query => {\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/artist/?query=artist:${query}%20AND%20tag:metal&fmt=json`\n    );\n    console.log(data);\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const getArtistDetails = async artistId => {\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/artist/${artistId}?inc=genres+release-groups&fmt=json`\n    );\n    console.log(data);\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const getNearestRealeases = async () => {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = date.getMonth().toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  const today = `${year}-${month}-${day}`;\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/release-group/?query=tag:(\"power metal\"+OR+\"heavy metal\")%20AND%20primarytype:album%20AND%20firstreleasedate:[${today} TO *]&fmt=json`\n    );\n\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n"],"names":["_jsxs","children","_jsx","NearestAlbums","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","releases","setReleases","console","log","useEffect","getRealeases","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","releasesInfo","wrap","_context","prev","next","getNearestRealeases","sent","t0","Notify","message","stop","apply","arguments","className","filter","release","includes","map","genres","tags","tag","name","title","join","id","NearestReleases","LastReleases","getArtistName","query","_yield$axios$get","data","axios","concat","abrupt","_x","getArtistDetails","_ref2","_callee2","artistId","_yield$axios$get2","_context2","_x2","_ref3","_callee3","date","year","month","day","today","_yield$axios$get3","_context3","Date","getFullYear","getMonth","toString","padStart","getDate"],"sourceRoot":""}