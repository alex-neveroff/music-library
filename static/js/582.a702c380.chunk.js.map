{"version":3,"file":"static/js/582.a702c380.chunk.js","mappings":"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","sources":["components/NearestReleases/NearestReleases.styled.js","components/NearestReleases/NearestReleases.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const NearestAlbums = styled.section`\n  .pageTitle {\n    text-transform: uppercase;\n    text-align: center;\n    margin-bottom: 15px;\n  }\n  .homeList {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 16px;\n    margin-bottom: 40px;\n  }\n  .homeList-item {\n    cursor: pointer;\n    border-radius: 5px;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    width: calc((100% - 64px) / 5);\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n    overflow: hidden;\n    background-color: #fff;\n\n    &:active {\n      transform: scale(0.97);\n      box-shadow: 15px 15px 15px rgba(0, 0, 0, 0.16),\n        15px 15px 15px rgba(0, 0, 0, 0.16), 15px -15px 15px rgba(0, 0, 0, 0.16),\n        -15px 15px 15px rgba(0, 0, 0, 0.16);\n    }\n\n    &:hover {\n      &:hover {\n        transform: scale(1.03);\n      }\n    }\n  }\n\n  .album-title {\n    text-transform: uppercase;\n    margin-bottom: 7px;\n    font-size: 16px;\n    line-height: 1.16;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding-left: 5px;\n  }\n  .album-data {\n    margin-bottom: 7px;\n    font-size: 16px;\n    line-height: 1.16;\n    padding-left: 5px;\n  }\n`;\n","import React from 'react';\nimport { NearestAlbums } from './NearestReleases.styled';\n\nconst NearestReleases = ({ releases }) => {\n  return (\n    <NearestAlbums>\n      <h2 className=\"pageTitle\">Nearest Releases of power metal</h2>\n      <ul className=\"homeList\">\n        {releases\n          .filter(release => release['first-release-date'].includes('-'))\n          .map(release => {\n            const genres = release.tags\n              .filter(tag => tag.name !== 'metal' && tag.name !== 'rock')\n              .sort((a, b) => b.count - a.count)\n              .slice(0, 2)\n              .map(tag => tag.name);\n\n            const cover = `http://coverartarchive.org/release-group/${release.id}/front-250`;\n            return (\n              <li className=\"homeList-item\" key={release.id}>\n                <img\n                  className=\"album-cover\"\n                  src={cover}\n                  alt={release.title}\n                  width=\"250\"\n                />\n                <h3 className=\"album-title\">{release.title}</h3>\n                <p className=\"album-data\">{release['first-release-date']}</p>\n                <p className=\"album-data\">\n                  {release['artist-credit'][0]['name']}\n                </p>\n                <p className=\"album-data\">{genres.join(', ')}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </NearestAlbums>\n  );\n};\n\nexport default NearestReleases;\n","import { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { getNearestRealeases } from 'services/api';\nimport NearestReleases from 'components/NearestReleases/NearestReleases';\n\nconst Home = () => {\n  const [releases, setReleases] = useState([]);\n  useEffect(() => {\n    const getRealeases = async () => {\n      try {\n        const releasesInfo = await getNearestRealeases();\n\n        setReleases(releasesInfo['release-groups']);\n      } catch (error) {\n        Notify.failure(error.message);\n      }\n    };\n    getRealeases();\n  }, []);\n\n  return (\n    <div>{releases.length > 0 && <NearestReleases releases={releases} />}</div>\n  );\n};\n\nexport default Home;\n","import { Notify } from 'notiflix';\nimport axios from 'axios';\n\nexport const getArtistName = async query => {\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/artist/?query=artist:${query}%20AND%20tag:metal&fmt=json`\n    );\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const getArtistDetails = async artistId => {\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/artist/${artistId}?inc=genres+release-groups&fmt=json`\n    );\n    console.log(data);\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const getNearestRealeases = async () => {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = date.getMonth().toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  const today = `${year}-${month}-${day}`;\n\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/release-group/?query=tag:(\"power metal\"+OR+\"heavy metal\")%20AND%20primarytype:album%20AND%20firstreleasedate:[${today} TO *]&fmt=json`\n    );\n    console.log('api: ', data);\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n"],"names":["NearestAlbums","styled","_templateObject","_taggedTemplateLiteral","_ref","releases","_jsxs","children","_jsx","className","filter","release","includes","map","genres","tags","tag","name","sort","a","b","count","slice","cover","concat","id","src","alt","title","width","join","_useState","useState","_useState2","_slicedToArray","setReleases","useEffect","getRealeases","_asyncToGenerator","_regeneratorRuntime","mark","_callee","releasesInfo","wrap","_context","prev","next","getNearestRealeases","sent","t0","Notify","message","stop","apply","arguments","length","NearestReleases","getArtistName","query","_yield$axios$get","data","axios","abrupt","_x","getArtistDetails","_ref2","_callee2","artistId","_yield$axios$get2","_context2","console","log","_x2","_ref3","_callee3","date","year","month","day","today","_yield$axios$get3","_context3","Date","getFullYear","getMonth","toString","padStart","getDate"],"sourceRoot":""}