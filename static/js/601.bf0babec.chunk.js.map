{"version":3,"file":"static/js/601.bf0babec.chunk.js","mappings":"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","sources":["components/ArtistsList/ArtistsList.jsx","components/SearchForm/SearchForm.jsx","pages/Artists.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst ArtistsList = ({ artists }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {artists.map(artist => (\n        <li key={artist.id}>\n          <Link to={`${artist.id}`} state={{ from: location }}>\n            {artist.name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ArtistsList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleChange = event => {\n    setSearchQuery(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchQuery === '') {\n      Notify.warning(`Enter artist name`);\n      return;\n    }\n    onSubmit(searchQuery);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input\n          className=\"form-input\"\n          type=\"text\"\n          name=\"search\"\n          onChange={handleChange}\n          value={searchQuery}\n          required\n        />\n      </label>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import ArtistsList from 'components/ArtistsList/ArtistsList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { getArtistName } from 'services/api';\n\nconst Artists = () => {\n  const [query, setQuery] = useState('');\n  const [artists, setArtists] = useState([]);\n\n  useEffect(() => {\n    if (query) {\n      const getArtist = async () => {\n        try {\n          const { artists } = await getArtistName(query);\n          setArtists([...artists]);\n        } catch (error) {\n          Notify.failure(error.message);\n        }\n      };\n\n      getArtist();\n    }\n  }, [query]);\n\n  const handleSubmit = searchQuery => {\n    setQuery(searchQuery);\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} />\n      <ArtistsList artists={artists} />\n    </>\n  );\n};\n\nexport default Artists;\n","import { Notify } from 'notiflix';\nimport axios from 'axios';\n\nexport const getArtistName = async query => {\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/artist/?query=artist:${query}%20AND%20tag:metal&fmt=json`\n    );\n    console.log(data);\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const getArtistDetails = async artistId => {\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/artist/${artistId}?inc=genres+release-groups&fmt=json`\n    );\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const getNearestRealeases = async () => {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = date.getMonth().toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  const today = `${year}-${month}-${day}`;\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/release-group/?query=tag:(\"power metal\"+OR+\"heavy metal\")%20AND%20primarytype:album%20AND%20firstreleasedate:[${today} TO *]&fmt=json`\n    );\n    console.log(data);\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n"],"names":["_ref","artists","location","useLocation","_jsx","children","map","artist","Link","to","concat","id","state","from","name","onSubmit","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_jsxs","event","preventDefault","Notify","className","type","onChange","currentTarget","value","required","query","setQuery","_useState3","_useState4","setArtists","useEffect","getArtist","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getArtistName","_artists","wrap","_context","prev","next","getArtistName","sent","_toConsumableArray","t0","message","stop","apply","arguments","_Fragment","SearchForm","ArtistsList","_yield$axios$get","data","axios","console","log","abrupt","_x","getArtistDetails","_ref2","_callee2","artistId","_yield$axios$get2","_context2","_x2","getNearestRealeases","_ref3","_callee3","date","year","month","day","today","_yield$axios$get3","_context3","Date","getFullYear","getMonth","toString","padStart","getDate"],"sourceRoot":""}