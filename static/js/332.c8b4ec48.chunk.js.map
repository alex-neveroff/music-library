{"version":3,"file":"static/js/332.c8b4ec48.chunk.js","mappings":"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","sources":["components/ArtistInfo/ArtistInfo.jsx","pages/ArtistDetails.jsx","services/api.js"],"sourcesContent":["import React from 'react';\n\nconst ArtistInfo = ({ artist }) => {\n  const { name } = artist;\n  const {\n    'life-span': { begin, ended },\n  } = artist;\n  const { name: country } = artist.area;\n  const genre = artist.genres.reduce((prev, current) => {\n    if (current.name === 'rock' || current.name === 'metal') {\n      return prev;\n    }\n    return prev.count > current.count ? prev : current;\n  });\n  const releases = artist['release-groups'].filter(\n    release => release['secondary-types'].length === 0\n  );\n\n  return (\n    <>\n      <div>\n        <h3>Artist info</h3>\n        <p>{name}</p>\n        <p>{country}</p>\n        <p>{begin ? begin : 'No date'}</p>\n        <p>{ended ? ended : begin ? 'Present days' : 'No date'}</p>\n        <p>{genre.name}</p>\n      </div>\n      <div>\n        <h3>Artist discography</h3>\n        <ul>\n          {releases.map(release => {\n            return (\n              <li key={release.id}>\n                <p>{release['first-release-date']}</p>\n                <p>{release.title}</p>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default ArtistInfo;\n","import ArtistInfo from 'components/ArtistInfo/ArtistInfo';\nimport { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getArtistDetails } from 'services/api';\n\nconst ArtistDetails = () => {\n  const { artistId } = useParams();\n  const [artist, setArtist] = useState(null);\n\n  useEffect(() => {\n    const getArtist = async () => {\n      try {\n        const artistInfo = await getArtistDetails(artistId);\n        setArtist(artistInfo);\n      } catch (error) {\n        Notify.failure(error.message);\n      }\n    };\n    getArtist();\n  }, [artistId]);\n\n  return (\n    <>\n      {artist && <h2>{artist.name}</h2>}\n      {artist && <ArtistInfo artist={artist} />}\n    </>\n  );\n};\n\nexport default ArtistDetails;\n","import { Notify } from 'notiflix';\nimport axios from 'axios';\n\nexport const getArtistName = async query => {\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/artist/?query=artist:${query}%20AND%20tag:metal&fmt=json`\n    );\n    console.log(data);\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const getArtistDetails = async artistId => {\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/artist/${artistId}?inc=genres+release-groups&fmt=json`\n    );\n    console.log(data);\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport const getNearestRealeases = async () => {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = date.getMonth().toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  const today = `${year}-${month}-${day}`;\n  try {\n    const { data } = await axios.get(\n      `http://musicbrainz.org/ws/2/release-group/?query=tag:(\"power metal\"+OR+\"heavy metal\")%20AND%20primarytype:album%20AND%20firstreleasedate:[${today} TO *]&fmt=json`\n    );\n\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n"],"names":["_ref","artist","name","_artist$lifeSpan","begin","ended","country","area","genre","genres","reduce","prev","current","count","releases","filter","release","length","_jsxs","_Fragment","children","_jsx","map","title","id","artistId","useParams","_useState","useState","_useState2","_slicedToArray","setArtist","useEffect","getArtist","_asyncToGenerator","_regeneratorRuntime","mark","_callee","artistInfo","wrap","_context","next","getArtistDetails","sent","t0","Notify","message","stop","apply","arguments","ArtistInfo","getArtistName","query","_yield$axios$get","data","axios","concat","console","log","abrupt","_x","_ref2","_callee2","_yield$axios$get2","_context2","_x2","getNearestRealeases","_ref3","_callee3","date","year","month","day","today","_yield$axios$get3","_context3","Date","getFullYear","getMonth","toString","padStart","getDate"],"sourceRoot":""}